name: DemoDiff Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Build with Maven
      run: mvn clean install

    - name: Run Unit Tests
      run: mvn test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to AWS ECR and EC2
      env:
        AWS_REGION: us-east-1  # Change this to demoiff AWS region
      run: |
        # Log in to AWS ECR
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin <demoiff-account-id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

        # Build Docker image and tag it with the ECR repository URI
        docker build -t <demoiff-account-id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/demoiff-ecr-repo:latest .

        # Push the Docker image to ECR
        docker push <demoiff-account-id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/demoiff-ecr-repo:latest

        # SSH into demoiff EC2 instance and pull the Docker image
        ssh -i /path/to/demoiff/private-key ec2-user@<ec2-instance-ip> "docker pull <demoiff-account-id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/demoiff-ecr-repo:latest"

        # Restart demoiff Docker container on EC2 (replace with demoiff actual commands)
        ssh -i /path/to/demoiff/private-key ec2-user@<ec2-instance-ip> "docker stop demoiff-container && docker rm demoiff-container"
        ssh -i /path/to/demoiff/private-key ec2-user@<ec2-instance-ip> "docker run -d --name demoiff-container -p 8080:8080 <demoiff-account-id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/demoiff-ecr-repo:latest"
